/*
Copyright 2023 The Paraglider Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

syntax = "proto3";
package tagservicepb;
import "google/protobuf/empty.proto";

option go_package="github.com/paraglider-project/paraglider/pkg/tag_service/tagservicepb";

service TagService {
    rpc SetTag(TagMapping) returns (BasicResponse) {}
    rpc GetTag(Tag) returns (TagMapping) {}
    rpc ResolveTag(Tag) returns (TagMappingList) {}
    rpc ListTags(google.protobuf.Empty) returns (TagMappingList) {}
    rpc DeleteTagMember(TagMapping) returns (BasicResponse) {}
    rpc DeleteTag(Tag) returns (BasicResponse) {}
    rpc Subscribe(Subscription) returns (BasicResponse) {}
    rpc Unsubscribe(Subscription) returns (BasicResponse) {}
    rpc GetSubscribers(Tag) returns (SubscriberList) {}
}

message Subscription {
    string tag_name = 1;
    string subscriber = 2;
}

message SubscriberList {
    repeated string subscribers = 1;
}

message Tag {
    string tag_name = 1;
}

message TagMappingList {
    repeated TagMapping mappings = 1;
}

message TagMapping {
    string tag_name = 1;
    repeated string child_tags = 2;
    optional string uri = 3;
    optional string ip = 4;
}

message BasicResponse {
    bool success = 1;
    string message = 2; 
}

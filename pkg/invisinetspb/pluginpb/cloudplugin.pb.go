//
//Copyright 2023 The Invisinets Authors.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.23.2
// source: pluginpb/cloudplugin.proto

package pluginpb

import (
	commonpb "github.com/NetSys/invisinets/pkg/invisinetspb/commonpb"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUsedAddressSpacesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment string `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *GetUsedAddressSpacesRequest) Reset() {
	*x = GetUsedAddressSpacesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsedAddressSpacesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsedAddressSpacesRequest) ProtoMessage() {}

func (x *GetUsedAddressSpacesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsedAddressSpacesRequest.ProtoReflect.Descriptor instead.
func (*GetUsedAddressSpacesRequest) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{0}
}

func (x *GetUsedAddressSpacesRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *GetUsedAddressSpacesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type GetUsedAddressSpacesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressSpaces []string `protobuf:"bytes,1,rep,name=address_spaces,json=addressSpaces,proto3" json:"address_spaces,omitempty"`
}

func (x *GetUsedAddressSpacesResponse) Reset() {
	*x = GetUsedAddressSpacesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUsedAddressSpacesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUsedAddressSpacesResponse) ProtoMessage() {}

func (x *GetUsedAddressSpacesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUsedAddressSpacesResponse.ProtoReflect.Descriptor instead.
func (*GetUsedAddressSpacesResponse) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{1}
}

func (x *GetUsedAddressSpacesResponse) GetAddressSpaces() []string {
	if x != nil {
		return x.AddressSpaces
	}
	return nil
}

type CreateResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment  string `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Namespace   string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Resource    string `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Description []byte `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateResourceRequest) Reset() {
	*x = CreateResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceRequest) ProtoMessage() {}

func (x *CreateResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceRequest.ProtoReflect.Descriptor instead.
func (*CreateResourceRequest) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{2}
}

func (x *CreateResourceRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *CreateResourceRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateResourceRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *CreateResourceRequest) GetDescription() []byte {
	if x != nil {
		return x.Description
	}
	return nil
}

type CreateResourceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uri  string `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Ip   string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *CreateResourceResponse) Reset() {
	*x = CreateResourceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResourceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResourceResponse) ProtoMessage() {}

func (x *CreateResourceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResourceResponse.ProtoReflect.Descriptor instead.
func (*CreateResourceResponse) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{3}
}

func (x *CreateResourceResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateResourceResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *CreateResourceResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type GetPermitListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment string `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Resource   string `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *GetPermitListRequest) Reset() {
	*x = GetPermitListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermitListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermitListRequest) ProtoMessage() {}

func (x *GetPermitListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermitListRequest.ProtoReflect.Descriptor instead.
func (*GetPermitListRequest) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{4}
}

func (x *GetPermitListRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *GetPermitListRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetPermitListRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

type GetPermitListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource string                     `protobuf:"bytes,1,opt,name=resource,proto3" json:"resource,omitempty"`
	Rules    []*commonpb.PermitListRule `protobuf:"bytes,2,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *GetPermitListResponse) Reset() {
	*x = GetPermitListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPermitListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPermitListResponse) ProtoMessage() {}

func (x *GetPermitListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPermitListResponse.ProtoReflect.Descriptor instead.
func (*GetPermitListResponse) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{5}
}

func (x *GetPermitListResponse) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *GetPermitListResponse) GetRules() []*commonpb.PermitListRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type AddPermitListRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment string                     `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Namespace  string                     `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Resource   string                     `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Rules      []*commonpb.PermitListRule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *AddPermitListRulesRequest) Reset() {
	*x = AddPermitListRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPermitListRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPermitListRulesRequest) ProtoMessage() {}

func (x *AddPermitListRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPermitListRulesRequest.ProtoReflect.Descriptor instead.
func (*AddPermitListRulesRequest) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{6}
}

func (x *AddPermitListRulesRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *AddPermitListRulesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *AddPermitListRulesRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *AddPermitListRulesRequest) GetRules() []*commonpb.PermitListRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type AddPermitListRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddPermitListRulesResponse) Reset() {
	*x = AddPermitListRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddPermitListRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddPermitListRulesResponse) ProtoMessage() {}

func (x *AddPermitListRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddPermitListRulesResponse.ProtoReflect.Descriptor instead.
func (*AddPermitListRulesResponse) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{7}
}

type DeletePermitListRulesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment string                     `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Namespace  string                     `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Resource   string                     `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	Rules      []*commonpb.PermitListRule `protobuf:"bytes,4,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *DeletePermitListRulesRequest) Reset() {
	*x = DeletePermitListRulesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePermitListRulesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermitListRulesRequest) ProtoMessage() {}

func (x *DeletePermitListRulesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermitListRulesRequest.ProtoReflect.Descriptor instead.
func (*DeletePermitListRulesRequest) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePermitListRulesRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *DeletePermitListRulesRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeletePermitListRulesRequest) GetResource() string {
	if x != nil {
		return x.Resource
	}
	return ""
}

func (x *DeletePermitListRulesRequest) GetRules() []*commonpb.PermitListRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type DeletePermitListRulesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeletePermitListRulesResponse) Reset() {
	*x = DeletePermitListRulesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePermitListRulesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePermitListRulesResponse) ProtoMessage() {}

func (x *DeletePermitListRulesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePermitListRulesResponse.ProtoReflect.Descriptor instead.
func (*DeletePermitListRulesResponse) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{9}
}

type CreateVpnGatewayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment string `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CreateVpnGatewayRequest) Reset() {
	*x = CreateVpnGatewayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVpnGatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVpnGatewayRequest) ProtoMessage() {}

func (x *CreateVpnGatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVpnGatewayRequest.ProtoReflect.Descriptor instead.
func (*CreateVpnGatewayRequest) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{10}
}

func (x *CreateVpnGatewayRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *CreateVpnGatewayRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CreateVpnGatewayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GatewayIpAddresses []string `protobuf:"bytes,1,rep,name=gateway_ip_addresses,json=gatewayIpAddresses,proto3" json:"gateway_ip_addresses,omitempty"`
	Asn                int64    `protobuf:"varint,2,opt,name=asn,proto3" json:"asn,omitempty"`
}

func (x *CreateVpnGatewayResponse) Reset() {
	*x = CreateVpnGatewayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVpnGatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVpnGatewayResponse) ProtoMessage() {}

func (x *CreateVpnGatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVpnGatewayResponse.ProtoReflect.Descriptor instead.
func (*CreateVpnGatewayResponse) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{11}
}

func (x *CreateVpnGatewayResponse) GetGatewayIpAddresses() []string {
	if x != nil {
		return x.GatewayIpAddresses
	}
	return nil
}

func (x *CreateVpnGatewayResponse) GetAsn() int64 {
	if x != nil {
		return x.Asn
	}
	return 0
}

type CreateVpnBgpSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment string `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Namespace  string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Cloud      string `protobuf:"bytes,3,opt,name=cloud,proto3" json:"cloud,omitempty"`
}

func (x *CreateVpnBgpSessionsRequest) Reset() {
	*x = CreateVpnBgpSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVpnBgpSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVpnBgpSessionsRequest) ProtoMessage() {}

func (x *CreateVpnBgpSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVpnBgpSessionsRequest.ProtoReflect.Descriptor instead.
func (*CreateVpnBgpSessionsRequest) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{12}
}

func (x *CreateVpnBgpSessionsRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *CreateVpnBgpSessionsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateVpnBgpSessionsRequest) GetCloud() string {
	if x != nil {
		return x.Cloud
	}
	return ""
}

type CreateVpnBgpSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BgpIpAddresses []string `protobuf:"bytes,1,rep,name=bgp_ip_addresses,json=bgpIpAddresses,proto3" json:"bgp_ip_addresses,omitempty"`
}

func (x *CreateVpnBgpSessionsResponse) Reset() {
	*x = CreateVpnBgpSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVpnBgpSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVpnBgpSessionsResponse) ProtoMessage() {}

func (x *CreateVpnBgpSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVpnBgpSessionsResponse.ProtoReflect.Descriptor instead.
func (*CreateVpnBgpSessionsResponse) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{13}
}

func (x *CreateVpnBgpSessionsResponse) GetBgpIpAddresses() []string {
	if x != nil {
		return x.BgpIpAddresses
	}
	return nil
}

type CreateVpnConnectionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deployment         string   `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	Namespace          string   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Cloud              string   `protobuf:"bytes,3,opt,name=cloud,proto3" json:"cloud,omitempty"`
	Asn                int64    `protobuf:"varint,4,opt,name=asn,proto3" json:"asn,omitempty"`
	AddressSpace       string   `protobuf:"bytes,5,opt,name=address_space,json=addressSpace,proto3" json:"address_space,omitempty"`
	GatewayIpAddresses []string `protobuf:"bytes,6,rep,name=gateway_ip_addresses,json=gatewayIpAddresses,proto3" json:"gateway_ip_addresses,omitempty"`
	BgpIpAddresses     []string `protobuf:"bytes,7,rep,name=bgp_ip_addresses,json=bgpIpAddresses,proto3" json:"bgp_ip_addresses,omitempty"`
	SharedKey          string   `protobuf:"bytes,8,opt,name=shared_key,json=sharedKey,proto3" json:"shared_key,omitempty"`
}

func (x *CreateVpnConnectionsRequest) Reset() {
	*x = CreateVpnConnectionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVpnConnectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVpnConnectionsRequest) ProtoMessage() {}

func (x *CreateVpnConnectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVpnConnectionsRequest.ProtoReflect.Descriptor instead.
func (*CreateVpnConnectionsRequest) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{14}
}

func (x *CreateVpnConnectionsRequest) GetDeployment() string {
	if x != nil {
		return x.Deployment
	}
	return ""
}

func (x *CreateVpnConnectionsRequest) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CreateVpnConnectionsRequest) GetCloud() string {
	if x != nil {
		return x.Cloud
	}
	return ""
}

func (x *CreateVpnConnectionsRequest) GetAsn() int64 {
	if x != nil {
		return x.Asn
	}
	return 0
}

func (x *CreateVpnConnectionsRequest) GetAddressSpace() string {
	if x != nil {
		return x.AddressSpace
	}
	return ""
}

func (x *CreateVpnConnectionsRequest) GetGatewayIpAddresses() []string {
	if x != nil {
		return x.GatewayIpAddresses
	}
	return nil
}

func (x *CreateVpnConnectionsRequest) GetBgpIpAddresses() []string {
	if x != nil {
		return x.BgpIpAddresses
	}
	return nil
}

func (x *CreateVpnConnectionsRequest) GetSharedKey() string {
	if x != nil {
		return x.SharedKey
	}
	return ""
}

type CreateVpnConnectionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateVpnConnectionsResponse) Reset() {
	*x = CreateVpnConnectionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pluginpb_cloudplugin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVpnConnectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVpnConnectionsResponse) ProtoMessage() {}

func (x *CreateVpnConnectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pluginpb_cloudplugin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVpnConnectionsResponse.ProtoReflect.Descriptor instead.
func (*CreateVpnConnectionsResponse) Descriptor() ([]byte, []int) {
	return file_pluginpb_cloudplugin_proto_rawDescGZIP(), []int{15}
}

var File_pluginpb_cloudplugin_proto protoreflect.FileDescriptor

var file_pluginpb_cloudplugin_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2f, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x1a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5b, 0x0a,
	0x1b, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x45, 0x0a, 0x1c, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x22, 0x93, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4e, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x70, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x63, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2e,
	0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0xa5,
	0x01, 0x0a, 0x19, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa8, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x2e, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x22,
	0x1f, 0x0a, 0x1d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x57, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x47, 0x61, 0x74,
	0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x22, 0x5e, 0x0a, 0x18, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79,
	0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x12, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x73, 0x6e, 0x22, 0x71, 0x0a, 0x1b, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x42, 0x67, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x22, 0x48, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x42, 0x67, 0x70, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x62, 0x67, 0x70, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x67, 0x70, 0x49, 0x70, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0xa3, 0x02, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x56, 0x70, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x73,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x61, 0x73, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x5f, 0x69, 0x70, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x67, 0x70, 0x5f, 0x69, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x62,
	0x67, 0x70, 0x49, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4b, 0x65, 0x79, 0x22, 0x1e, 0x0a, 0x1c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9f, 0x06, 0x0a,
	0x0b, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x67, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x61, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6a, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x75, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5b, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x47, 0x61, 0x74, 0x65,
	0x77, 0x61, 0x79, 0x12, 0x21, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70,
	0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x42, 0x67, 0x70, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x42, 0x67, 0x70, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e,
	0x42, 0x67, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x67, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x70, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x25, 0x2e,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x70, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x70, 0x6e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x38,
	0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4e, 0x65, 0x74,
	0x53, 0x79, 0x73, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x74, 0x73, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x69, 0x6e, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x65, 0x74, 0x73, 0x70, 0x62, 0x2f,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pluginpb_cloudplugin_proto_rawDescOnce sync.Once
	file_pluginpb_cloudplugin_proto_rawDescData = file_pluginpb_cloudplugin_proto_rawDesc
)

func file_pluginpb_cloudplugin_proto_rawDescGZIP() []byte {
	file_pluginpb_cloudplugin_proto_rawDescOnce.Do(func() {
		file_pluginpb_cloudplugin_proto_rawDescData = protoimpl.X.CompressGZIP(file_pluginpb_cloudplugin_proto_rawDescData)
	})
	return file_pluginpb_cloudplugin_proto_rawDescData
}

var file_pluginpb_cloudplugin_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_pluginpb_cloudplugin_proto_goTypes = []interface{}{
	(*GetUsedAddressSpacesRequest)(nil),   // 0: pluginpb.GetUsedAddressSpacesRequest
	(*GetUsedAddressSpacesResponse)(nil),  // 1: pluginpb.GetUsedAddressSpacesResponse
	(*CreateResourceRequest)(nil),         // 2: pluginpb.CreateResourceRequest
	(*CreateResourceResponse)(nil),        // 3: pluginpb.CreateResourceResponse
	(*GetPermitListRequest)(nil),          // 4: pluginpb.GetPermitListRequest
	(*GetPermitListResponse)(nil),         // 5: pluginpb.GetPermitListResponse
	(*AddPermitListRulesRequest)(nil),     // 6: pluginpb.AddPermitListRulesRequest
	(*AddPermitListRulesResponse)(nil),    // 7: pluginpb.AddPermitListRulesResponse
	(*DeletePermitListRulesRequest)(nil),  // 8: pluginpb.DeletePermitListRulesRequest
	(*DeletePermitListRulesResponse)(nil), // 9: pluginpb.DeletePermitListRulesResponse
	(*CreateVpnGatewayRequest)(nil),       // 10: pluginpb.CreateVpnGatewayRequest
	(*CreateVpnGatewayResponse)(nil),      // 11: pluginpb.CreateVpnGatewayResponse
	(*CreateVpnBgpSessionsRequest)(nil),   // 12: pluginpb.CreateVpnBgpSessionsRequest
	(*CreateVpnBgpSessionsResponse)(nil),  // 13: pluginpb.CreateVpnBgpSessionsResponse
	(*CreateVpnConnectionsRequest)(nil),   // 14: pluginpb.CreateVpnConnectionsRequest
	(*CreateVpnConnectionsResponse)(nil),  // 15: pluginpb.CreateVpnConnectionsResponse
	(*commonpb.PermitListRule)(nil),       // 16: commonpb.PermitListRule
}
var file_pluginpb_cloudplugin_proto_depIdxs = []int32{
	16, // 0: pluginpb.GetPermitListResponse.rules:type_name -> commonpb.PermitListRule
	16, // 1: pluginpb.AddPermitListRulesRequest.rules:type_name -> commonpb.PermitListRule
	16, // 2: pluginpb.DeletePermitListRulesRequest.rules:type_name -> commonpb.PermitListRule
	0,  // 3: pluginpb.CloudPlugin.GetUsedAddressSpaces:input_type -> pluginpb.GetUsedAddressSpacesRequest
	2,  // 4: pluginpb.CloudPlugin.CreateResource:input_type -> pluginpb.CreateResourceRequest
	4,  // 5: pluginpb.CloudPlugin.GetPermitList:input_type -> pluginpb.GetPermitListRequest
	6,  // 6: pluginpb.CloudPlugin.AddPermitListRules:input_type -> pluginpb.AddPermitListRulesRequest
	8,  // 7: pluginpb.CloudPlugin.DeletePermitListRules:input_type -> pluginpb.DeletePermitListRulesRequest
	10, // 8: pluginpb.CloudPlugin.CreateVpnGateway:input_type -> pluginpb.CreateVpnGatewayRequest
	12, // 9: pluginpb.CloudPlugin.CreateVpnBgpSessions:input_type -> pluginpb.CreateVpnBgpSessionsRequest
	14, // 10: pluginpb.CloudPlugin.CreateVpnConnections:input_type -> pluginpb.CreateVpnConnectionsRequest
	1,  // 11: pluginpb.CloudPlugin.GetUsedAddressSpaces:output_type -> pluginpb.GetUsedAddressSpacesResponse
	3,  // 12: pluginpb.CloudPlugin.CreateResource:output_type -> pluginpb.CreateResourceResponse
	5,  // 13: pluginpb.CloudPlugin.GetPermitList:output_type -> pluginpb.GetPermitListResponse
	7,  // 14: pluginpb.CloudPlugin.AddPermitListRules:output_type -> pluginpb.AddPermitListRulesResponse
	9,  // 15: pluginpb.CloudPlugin.DeletePermitListRules:output_type -> pluginpb.DeletePermitListRulesResponse
	11, // 16: pluginpb.CloudPlugin.CreateVpnGateway:output_type -> pluginpb.CreateVpnGatewayResponse
	13, // 17: pluginpb.CloudPlugin.CreateVpnBgpSessions:output_type -> pluginpb.CreateVpnBgpSessionsResponse
	15, // 18: pluginpb.CloudPlugin.CreateVpnConnections:output_type -> pluginpb.CreateVpnConnectionsResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_pluginpb_cloudplugin_proto_init() }
func file_pluginpb_cloudplugin_proto_init() {
	if File_pluginpb_cloudplugin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pluginpb_cloudplugin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsedAddressSpacesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUsedAddressSpacesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResourceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermitListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPermitListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPermitListRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddPermitListRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePermitListRulesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePermitListRulesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVpnGatewayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVpnGatewayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVpnBgpSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVpnBgpSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVpnConnectionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pluginpb_cloudplugin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVpnConnectionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pluginpb_cloudplugin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pluginpb_cloudplugin_proto_goTypes,
		DependencyIndexes: file_pluginpb_cloudplugin_proto_depIdxs,
		MessageInfos:      file_pluginpb_cloudplugin_proto_msgTypes,
	}.Build()
	File_pluginpb_cloudplugin_proto = out.File
	file_pluginpb_cloudplugin_proto_rawDesc = nil
	file_pluginpb_cloudplugin_proto_goTypes = nil
	file_pluginpb_cloudplugin_proto_depIdxs = nil
}

name: Release Images and Binaries

on:
  push:
    tags:
      - 'v**'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: ./go.mod
    - name: Get protoc
      uses: arduino/setup-protoc@v3
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Get protoc-gen-go
      run: |
        GOOS=$(go env GOHOSTOS) GOARCH=$(go env GOHOSTARCH) go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        GOOS=$(go env GOHOSTOS) GOARCH=$(go env GOHOSTARCH) go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build binaries for amd64
      run: GOARCH=amd64 make build
    - name: Build binaries for arm64
      run: GOARCH=arm64 make build
    - name: Tag and push Paraglider image with tag 'latest' and ${{ github.ref_name }}
      run: |
        docker buildx create --use --driver docker-container
        PLATFORMS=linux/amd64,linux/arm64 make push-image
        PLATFORMS=linux/amd64,linux/arm64 make push-image IMAGE_VERSION=${{ github.ref_name }}
    - name: Build and compress binaries
      run: |
        for pair in "linux:amd64" "linux:arm64" "darwin:amd64" "darwin:arm64" "windows:amd64" "windows:arm64"; do
          IFS=':' read -r os arch <<< "$pair"
          GOOS="$os" GOARCH="$arch" make build
          echo tar -czvf "paraglider-$os-$arch.tar.gz" --transform "s|dist/${os}_${arch}/release|paraglider/|" ./dist/"${os}_${arch}"/release
          tar -czvf "paraglider-$os-$arch.tar.gz" --transform "s|dist/${os}_${arch}/release|paraglider/|" ./dist/"${os}_${arch}"/release
        done
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./paraglider*
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

name: Functional Tests

on:
  workflow_run:
    workflows: [Functional Tests Approval]
    types:
      - completed

env:
  # Go version to install
  GOVER: '^1.22'
  GOPROXY: https://proxy.golang.org
  
  # gotestsum version - see: https://github.com/gotestyourself/gotestsum
  GOTESTSUMVERSION: 1.10.0

  # github contexts
  GH_RUN_ID: ${{ github.run_id }}
  GH_RUN_NUMBER: ${{ github.run_number }}
  GH_RUN_ATTEMPT: ${{ github.run_attempt }}

  # Cloud account fields
  INVISINETS_GCP_PROJECT_PARENT: ${{ secrets.GCP_FOLDER_ID }}
  INVISINETS_GCP_PROJECT_BILLING_ACCOUNT_NAME: ${{ secrets.GCP_BILLING_ACCOUNT_NAME }}
  INVISINETS_AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  functional-tests:
    name: Functional Tests
    runs-on: ubuntu-latest
    environment: functional-tests
    permissions:
      checks: write
      contents: read
      id-token: write
    steps:
      - name: Test
        run: echo "Functional Tests"
      # - name: Check out repo
      #   uses: actions/checkout@v4
      # - name: Set up Go ${{ env.GOVER }}
      #   uses: actions/setup-go@v5
      #   with:
      #     go-version: ${{ env.GOVER }}
      # - name: Get protoc
      #   uses: arduino/setup-protoc@v3
      #   with:
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      # - name: Get protoc-gen-go
      #   run: |
      #     go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      #     go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      # - name: Make build
      #   run: |
      #     make build
      # - name: Authenticate to Google Cloud
      #   uses: google-github-actions/auth@v2
      #   with:
      #     workload_identity_provider: 'projects/112338121957/locations/global/workloadIdentityPools/github/providers/paraglider'
      #     service_account: 'invisinets-cicd@invisinets-cicd.iam.gserviceaccount.com'
      # - name: 'Az CLI login'
      #   uses: azure/login@v2
      #   with:
      #       creds: ${{ secrets.AZURE_CREDENTIALS }}
      # - name: Run integration tests
      #   run: |
      #     make integration-test
      # - name: Run multicloud tests
      #   run: |
      #     make multicloud-test
